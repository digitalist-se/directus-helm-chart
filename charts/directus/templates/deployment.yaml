apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "directus.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "directus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "directus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "directus.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "directus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: write-permissions
          image: busybox:1.36
          command: ["sh","-c","chown -R 1000:1000 /directus/uploads"]
          volumeMounts:
            - name: uploads
              mountPath: /directus/uploads
              subPath: uploads
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- if .Values.mariadb.enabled }}
        - name: db-init
          image:  "{{ .Values.mariadb.image.registry }}/{{ .Values.mariadb.image.repository }}:{{ .Values.mariadb.image.tag }}"
          command:
            - "/bin/sh"
            - "-c"
            - "until mysql --host=${DB_HOST} --user=${DB_USER} --password=${DB_PASSWORD} --execute=\"SELECT 1;\"; do echo waiting for mysql; sleep 2; done;"
          env:
            - name: DB_DATABASE
              value: {{ .Values.mariadb.auth.database }}
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              value: {{ .Values.mariadb.auth.username }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  key: mariadb-password
            - name: DB_CLIENT
              value: mysql
            - name: DB_HOST
              value: {{ .Release.Name }}-mariadb
{{- end }}
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node"]
          args: ["/directus/cli.js", "bootstrap"]
          env:
{{- if .Values.public.url }}
            - name: PUBLIC_URL
              value: {{ .Values.public.url }}
{{ else }}
            {{- if .Values.ingress.enabled }}
            - name: PUBLIC_URL
              value: http{{ if .Values.ingress.tls }}s{{ end }}://{{(index .Values.ingress.hosts 0).host }}
            {{ else }}
            - name: PUBLIC_URL
              value: ""
            {{- end }}
{{- end }}
            - name: KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "directus.fullname" . }}-secrets
                  key: key
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "directus.fullname" . }}-secrets
                  key: secret
            {{- if .Values.admin.email }}
            - name: ADMIN_EMAIL
              value: {{ .Values.admin.email }}
            {{- end }}
            {{- if .Values.admin.password }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.admin.password }}
            {{- end }}
            {{- if .Values.mariadb.enabled }}
            - name: DB_DATABASE
              value: {{ .Values.mariadb.auth.database }}
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              value: {{ .Values.mariadb.auth.username }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  key: mariadb-password
            - name: DB_CLIENT
              value: mysql
            - name: DB_HOST
              value: {{ .Release.Name }}-mariadb
            {{- end }}
          {{- if .Values.extraEnvVars }}
          envFrom:
          - configMapRef:
            name: {{ include "directus.fullname" . }}-extra-environment-variables
          {{- end }}
          volumeMounts:
            - name: uploads
              mountPath: /directus/uploads
              subPath: uploads
            - name: extensions
              mountPath: /directus/extensions
              subPath: extensions
            - name: templates
              mountPath: /directus/templates
              subPath: templates
      {{- if .Values.snapshot }}
        - name: {{ .Chart.Name }}-schema-snapshot
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node"]
          args: ["/directus/cli.js", "schema", "snapshot", "--format", "yaml", "-y", "/startup-snapshot/snapshot.yaml"]
          env:
{{- if .Values.public.url }}
            - name: PUBLIC_URL
              value: {{ .Values.public.url }}
{{ else }}
            {{- if .Values.ingress.enabled }}
            - name: PUBLIC_URL
              value: http{{ if .Values.ingress.tls }}s{{ end }}://{{(index .Values.ingress.hosts 0).host }}
            {{- end }}
{{- end }}
            - name: KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "directus.fullname" . }}-secrets
                  key: key
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "directus.fullname" . }}-secrets
                  key: secret
            {{- if .Values.mariadb.enabled }}
            - name: DB_DATABASE
              value: {{ .Values.mariadb.auth.database }}
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              value: {{ .Values.mariadb.auth.username }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  key: mariadb-password
            - name: DB_CLIENT
              value: mysql
            - name: DB_HOST
              value: {{ .Release.Name }}-mariadb
            {{- end }}
          {{- if .Values.extraEnvVars }}
          envFrom:
          - configMapRef:
            name: {{ include "directus.fullname" . }}-extra-environment-variables
          {{- end }}
          volumeMounts:
            - mountPath: /startup-snapshot
              name: startup-snapshot
      {{- end }}
      {{- if .Values.initContainers }}
{{ toYaml .Values.initContainers | indent 8 }}
      {{- end }}
      containers:
        {{- if .Values.sidecars }}
{{ toYaml .Values.sidecars | indent 8 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node"]
          args: ["/directus/cli.js", "start"]
          env:
            {{- if .Values.admin.email }}
            - name: ADMIN_EMAIL
              value: {{ .Values.admin.email }}
            {{- end }}
            {{- if .Values.admin.password }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.admin.password }}
            {{- end }}
            {{- if .Values.log.level }}
            - name: LOG_LEVEL
              value: {{ .Values.log.level }}
            {{- end }}
            {{- if .Values.log.style }}
            - name: LOG_STYLE
              value: {{ .Values.log.style }}
            {{- end }}
            {{- if .Values.public.url }}
            - name: PUBLIC_URL
              value: {{ .Values.public.url }}
            {{ else }}
            {{- if .Values.ingress.enabled }}
            - name: PUBLIC_URL
              value: http{{ if .Values.ingress.tls }}s{{ end }}://{{(index .Values.ingress.hosts 0).host }}
            {{- end }}
            {{- end }}
            - name: KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "directus.fullname" . }}-secrets
                  key: key
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "directus.fullname" . }}-secrets
                  key: secret
{{- if .Values.generateEnvVars.mariadb }}
            {{- if .Values.mariadb.enabled }}
            - name: DB_DATABASE
              value: {{ .Values.mariadb.auth.database }}
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              value: {{ .Values.mariadb.auth.username }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  key: mariadb-password
            - name: DB_CLIENT
              value: mysql
            - name: DB_HOST
              value: {{ .Release.Name }}-mariadb
            {{- end }}
{{- end }}
{{- if .Values.generateEnvVars.redis }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: redis-password
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_DB
              value: "1"
            - name: REDIS_USERNAME
              value: ""
            - name: REDIS_HOST
              value: {{ .Release.Name }}-redis-headless
            {{- end }}
{{- end }}
            {{- if .Values.cache.enabled }}
            - name: CACHE_ENABLED
              value: "true"
            - name: CACHE_TTL
              value: {{ .Values.cache.ttl }}
            - name: CACHE_STORE
              value: {{ .Values.cache.store }}
            - name: CACHE_AUTO_PURGE
              value: {{ .Values.cache.autoPurge | quote }}
            {{- end }}
          {{- if .Values.extraEnvVars }}
          envFrom:
          - configMapRef:
            name: {{ include "directus.fullname" . }}-extra-environment-variables
          {{- end }}
          volumeMounts:
{{- if .Values.snapshot }}
            - mountPath: /startup-snapshot
              name: startup-snapshot
{{- end }}
            - name: uploads
              mountPath: /directus/uploads
              subPath: uploads
            - name: extensions
              mountPath: /directus/extensions
              subPath: extensions
            - name: templates
              mountPath: /directus/templates
              subPath: templates
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
{{- end }}
          ports:
            - name: http
              containerPort: 8055
              protocol: TCP
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /server/health/
              port: http
            failureThreshold: 30
            periodSeconds: 10
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 20
            httpGet:
              path: /server/health/
              port: http
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            httpGet:
              path: /server/health/
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
{{- if .Values.snapshot }}
      - name: startup-snapshot
        emptyDir: {}
{{- end }}
      - name: uploads
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "directus.fullname" .) }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: extensions
        {{- if .Values.persistenceExtensions.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "directus.fullname" . }}-extensions
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: templates
        {{- if .Values.persistenceTemplates.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "directus.fullname" . }}-templates
        {{- else }}
        emptyDir: {}
        {{- end }}


{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 6 }}
{{- end }}
